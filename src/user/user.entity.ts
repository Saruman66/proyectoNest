/**
 * üìå ¬øPor qu√© es necesario este archivo?
 * 
 * Este archivo define la **Entidad User**, que representa la tabla "user" en la base de datos PostgreSQL.
 * En NestJS con TypeORM, una **entidad** es una clase que mapea directamente a una tabla de la base de datos.
 * 
 * ‚úÖ Importancia de este archivo:
 * - Define c√≥mo se estructura la tabla en PostgreSQL (campos, tipos de datos, restricciones).
 * - Permite que TypeORM maneje autom√°ticamente la creaci√≥n de la tabla y su sincronizaci√≥n.
 * - Se utiliza en los repositorios y servicios (`UserService`) para realizar operaciones CRUD (crear, leer, actualizar, borrar).
 * - Es la base de toda la l√≥gica de usuarios (registro, login, balance de tokens, etc.).
 * 
 * üëâ En resumen: sin la entidad, tu aplicaci√≥n no sabr√≠a c√≥mo guardar ni recuperar informaci√≥n de los usuarios.
 */

import { Entity, Column, PrimaryGeneratedColumn, CreateDateColumn, UpdateDateColumn } from 'typeorm';

@Entity() // Marca la clase como una tabla en la base de datos
export class User {
  @PrimaryGeneratedColumn()
  id: number; 
  // üîπ Clave primaria autoincremental -> genera IDs √∫nicos para cada usuario autom√°ticamente.

  @Column({ unique: true })
  email: string; 
  // üîπ Correo electr√≥nico del usuario.
  // `unique: true` evita que se repitan correos en la base de datos.

  @Column()
  password: string; 
  // üîπ Contrase√±a del usuario (se guardar√° encriptada con bcrypt m√°s adelante).

  @Column({ default: 0 })
  balance: number; 
  // üîπ Tokens o saldo del usuario.
  // Se inicializa en 0 por defecto cuando se crea un nuevo usuario.

  @CreateDateColumn()
  createdAt: Date; 
  // üîπ Fecha de creaci√≥n -> se asigna autom√°ticamente cuando se inserta el usuario.

  @UpdateDateColumn()
  updatedAt: Date; 
  // üîπ Fecha de √∫ltima actualizaci√≥n -> cambia autom√°ticamente cada vez que se actualiza un registro.
}




// import { Entity, PrimaryGeneratedColumn, Column } from 'typeorm';

// @Entity()  // Marca la clase como una tabla en la base de datos
// export class User {  // <-- IMPORTANTE: debe tener 'export'
//   @PrimaryGeneratedColumn()
//   id: number;

//   @Column()
//   name: string;
// }
